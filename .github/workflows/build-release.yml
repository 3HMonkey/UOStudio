name: Build-Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  DOTNET_NOLOGO: false
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          [
              macos-10.15,
              ubuntu-16.04,
              ubuntu-18.04,
              windows-2016,
              windows-2019,
          ]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    env:
      GIT_TAG: ${GITHUB_REF#refs/tags/}

    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.402

      - name: Test
        run: dotnet test -c Release

      - name: Publish Client for ${{ matrix.os }}
        if: ${{ contains(matrix.runs-on, 'windows') }}
        run: |
             dotnet publish ./src/UOStudio.Client/UOStudio.Client.csproj -r ${{ matrix.runs-on }} -c Release -o ./dist/client/windows
             zip -9 -r uostudio.client.${{ matrix.os }}.zip ./dist/client/windows*

      - name: Publish Client for ${{ matrix.os }}
        if: ${{ contains(matrix.runs-on, 'macos') }}
        run: |
             dotnet publish ./src/UOStudio.Client/UOStudio.Client.csproj -r ${{ matrix.runs-on }} -c Release -o ./build/client/osx
             zip -9 -r uostudio.client.${{ matrix.os }}.zip ./dist/client/osx*

      - name: Publish Client for ${{ matrix.os }}
        if: ${{ contains(matrix.runs-on, 'ubuntu') }}
        run: |
             dotnet publish ./src/UOStudio.Client/UOStudio.Client.csproj -r ${{ matrix.runs-on }} -c Release -o ./build/client/linux
             zip -9 -r uostudio.client.${{ matrix.os }}.zip ./dist/client/linux*

      - name: Publish Client for ${{ matrix.os }}
        if: ${{ contains(matrix.runs-on, 'windows') }}
        run: |
          dotnet publish ./src/UOStudio.Server/UOStudio.Server.csproj -r ${{ matrix.runs-on }} -c Release -o ./dist/server/windows
          zip -9 -r uostudio.server.${{ matrix.os }}.zip ./dist/server/windows*

      - name: Publish Client for ${{ matrix.os }}
        if: ${{ contains(matrix.runs-on, 'macos') }}
        run: |
          dotnet publish ./src/UOStudio.Server/UOStudio.Server.csproj -r ${{ matrix.runs-on }} -c Release -o ./build/server/osx
          zip -9 -r uostudio.server.${{ matrix.os }}.zip ./dist/server/osx*

      - name: Publish Client for ${{ matrix.os }}
        if: ${{ contains(matrix.runs-on, 'ubuntu') }}
        run: |
          dotnet publish ./src/UOStudio.Server/UOStudio.Server.csproj -r ${{ matrix.runs-on }} -c Release -o ./build/server/linux
          zip -9 -r uostudio.server.${{ matrix.os }}.zip ./dist/server/linux*

      - name: Upload Client Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./uostudio.client.${{ matrix.os }}.zip
          asset_name: UOStudio-Client-${{ matrix.os }}-x64-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip

      - name: Upload Server Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./uostudio.server.${{ matrix.os }}.zip
          asset_name: UOStudio-Server-${{ matrix.os }}-x64-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip
