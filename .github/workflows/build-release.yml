name: Build Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

env:
  DOTNET_NOLOGO: false
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      run: echo ${{ steps.vars.outputs.tag }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.tag }}
        release_name: Release ${{ steps.vars.outputs.tag }}
        draft: false
        prerelease: false

    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

    - name: Save Release URL file
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    runs-on: ubuntu-latest
    needs: [release]
    strategy:
      matrix:
        os: [win, ubuntu.16.04, ubuntu.18.04, ubuntu.20.04, debian.9, debian.10, centos.7, centos.8, osx]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.402

      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
          rm -rf ./release_url

      - name: Publish client package
        run: ./publish.sh ${{ matrix.os }}

      - name: Zip client package
        run: zip -9 -r uostudio.client.${{ matrix.os }}.zip ./dist/${{ matrix.os }}-x64/client/*

      - name: Zip server package
        run: zip -9 -r uostudio.server.${{ matrix.os }}.zip ./dist/${{ matrix.os }}-x64/server/*

      - name: Upload Client Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./uostudio.client.${{ matrix.os }}.zip
          asset_name: UOStudio-Client-${{ matrix.os }}-x64-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip

      - name: Upload Server Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./uostudio.server.${{ matrix.os }}.zip
          asset_name: UOStudio-Server-${{ matrix.os }}-x64-${{ steps.vars.outputs.tag }}.zip
          asset_content_type: application/zip
